name: Publish npm package
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master
      - v2
      - bundle
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Bump version and get tag
        id: version_bump
        uses: anothrNick/github-tag-action@1.13.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_BRANCHES: 'master,v2'
          DEFAULT_BUMP: 'patch'
          WITH_V: true
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@g-loot' # Defaults to the user or organization that owns the workflow file
      - run: npm i
      - run: npm run build
      # This gets the current tag (pre-release and real tags)
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$( git describe --tag --abbrev=0 )

      - run: git describe --tag --abbrev=0
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: publish
    env:
      CI: true

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      # This gets the current tag (pre-release and real tags)
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$( git describe --tags )
      - name: github package access
        run: |
          echo @g-loot:registry=https://npm.pkg.github.com > .npmrc
          echo //npm.pkg.github.com/:_authToken=${{ secrets.GH_PACKAGE_TOKEN }} >> .npmrc
          cat .npmrc
      - name: npm install
        run: npm ci

      - name: build and bundle
        run: npm run build

      - name: build docker image
        run: docker build -t gcr.io/play-gll-gg/payments-react-library-web-client:${{ steps.get_version.outputs.VERSION }} .

      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: gcloud auth configure-docker

      - name: Publish image
        run: docker push gcr.io/play-gll-gg/payments-react-library-web-client:${{ steps.get_version.outputs.VERSION }}
  deploy:
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v1'
        with:
          ref: ${{ github.event.client_payload.ref }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$( git describe --tags )

      - name: Deploy to prod environment
        uses: g-loot/action-deploy-helm@master
        with:
          cluster: 'prod-gll-play'
          gcp_key: ${{ secrets.GKE_KEY }}
          helm_args: '-f scripts/resources/kubernetes-config/default.yaml -f scripts/resources/kubernetes-config/prod.yaml --set image.tag=${{ steps.get_version.outputs.VERSION }}'
